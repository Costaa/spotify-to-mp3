#!/usr/bin/env ruby

require 'rubygems'
require 'grooveshark'
require 'open-uri'
require 'colorize'
require 'cgi'

class SpotifyToMp3
  def initialize
    @grooveshark = Grooveshark.new
    @spotify = Spotify.new
  end

  def create_song(id)
    Song.new(id, @spotify, @grooveshark)
  end

  private

  class Song
    def initialize(id, spotify, grooveshark)
      @spotify = spotify
      @grooveshark = grooveshark
      if id.start_with?('http://open.spotify.com/track/', 'spotify:track:')
        track = spotify.track(id)
        @grooveshark_query = "artist:\"#{track.artist}\" title:\"#{track.name}\""
        @human_name = "#{track.artist} - #{track.name}"
        @filename = "#{@human_name}.mp3"
      else
        @grooveshark_query = id
        @human_name = id
        @filename = "#{@human_name}.mp3"
      end
      @filename = File.basename(@filename) # Avoid injection attacks
      @filename.tr('/', '-') # / is not allowed in file names
    end

    def to_s
      @human_name
    end

    def downloaded
      File.exists?(@filename)
    end

    def download
      download_url(@grooveshark.song_url(@grooveshark_query))
    end

    private

    def download_url(url)
      content = open(url).read
      file = open(@filename, 'wb')
      file.write(content)
      file.close
    end
  end

  class Grooveshark
    def initialize
      @client = ::Grooveshark::Client.new
    end

    def song_url(query)
      song = @client.search_songs(query).first
      raise "Song not found" if song.nil?
      @client.get_song_url(song)
    end
  end

  class Spotify
    def track(uri)
      content = open('http://ws.spotify.com/lookup/1/.json?uri=' + CGI.escape(uri))
      json = JSON.parse(content.string)
      Track.new(json)
    end

    class Track
      attr_reader :name, :artist

      def initialize(json)
        @name = json['track']['name']
        @artist = json['track']['artists'].first['name']
      end
    end
  end
end

begin
  spotifyToMp3 = SpotifyToMp3.new
  
  file = ARGV.first
  raise "No songs file specified. Usage: #{$0} file" if file.nil?
  
  File.open(file).each_line{|song_id|
    song_id.strip!
    next if song_id.empty?
    begin
      song = spotifyToMp3.create_song(song_id)
      print "Downloading #{song} "
      if song.downloaded
        puts "Already exists, skipping".green
      else
        song.download
        puts "Done".green
      end
    rescue
      puts "#{$!}".red
    end
  }
rescue
  puts "#{$!}".red
end
